{"version":3,"sources":["styles/colors.ts","components/DatePicker.tsx","components/Footer.tsx","components/Header.tsx","util/datefn.ts","components/common/DatePresenter.tsx","components/common/NumberInput.tsx","components/DateFromX.tsx","components/DateToX.tsx","components/Result.tsx","components/SubHeader.tsx","App.tsx","styles/globalStyle.ts","index.tsx"],"names":["colors","background","primary","lightPrimary","foreground","TextInput","styled","input","props","width","DateLabel","label","TodayButton","button","Container","div","DatePicker","date","onDateChange","useState","yearStr","setYearStr","monthStr","setMonthStr","dateStr","setDateStr","useEffect","getFullYear","getMonth","getDate","handleInputChange","e","value","target","startsWith","length","isNaN","parseInt","newDate","name","Date","getTime","type","onChange","onClick","FooterBox","Footer","HeaderBox","Header","addDays","days","setDate","DatePresenter","dateValue","year","month","NumberInput","onValueChange","className","raw","setRaw","num","isLeft","DateFromX","currentDate","setDays","addedDate","DLabel","v","span","DateToX","Result","SubHeader","SubHeaderBox","glass","css","App","setCurrentDate","backgroundAnimation","keyframes","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f013a4b6.chunk.js","sourcesContent":["const colors = {\n  background: \"#3F81DB\",\n  primary: \"#67dd52\",\n  lightPrimary: \"#d8ffd1\",\n\n  foreground: \"white\",\n};\n\nexport default colors;\n","import { ChangeEvent, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../styles/colors\";\n\nconst TextInput = styled.input<{ width?: string }>`\n  width: ${(props) => props.width ?? \"2.5em\"};\n  padding: 0.05em 0.3em;\n  background-color: transparent;\n\n  border: none;\n  border-left: 1px solid $white;\n  border-top: 1px solid $white;\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n\n  text-align: center;\n  font-size: 1.5em;\n\n  color: inherit;\n\n  transition: border-color 0.3s;\n\n  &:hover {\n    border-color: ${colors.primary};\n  }\n\n  &:focus-visible {\n    border-color: ${colors.primary};\n    outline: none;\n  }\n`;\n\nconst DateLabel = styled.label`\n  margin-left: 0.2em;\n  margin-right: 0.6em;\n`;\n\nconst TodayButton = styled.button`\n  border: 1px solid white;\n  background-color: transparent;\n  border-radius: 5000px;\n\n  color: inherit;\n  cursor: pointer;\n\n  width: 4em;\n  font-size: 1.1em;\n\n  transition: background-color 0.15s;\n\n  &:hover {\n    background-color: rgb(231, 231, 231, 0.1);\n  }\n\n  &:active {\n    background-color: rgb(231, 231, 231, 0.2);\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n\n  padding-left: 4em;\n  padding-bottom: 0.6em;\n`;\n\ninterface DatePickerProps {\n  date: Date;\n  onDateChange(date: Date): void;\n}\n\nexport function DatePicker(props: DatePickerProps) {\n  const { date, onDateChange = () => {} } = props;\n\n  const [yearStr, setYearStr] = useState(\"\");\n  const [monthStr, setMonthStr] = useState(\"\");\n  const [dateStr, setDateStr] = useState(\"\");\n\n  useEffect(() => {\n    setYearStr(date.getFullYear() + \"\");\n    setMonthStr(date.getMonth() + 1 + \"\");\n    setDateStr(date.getDate() + \"\");\n  }, [date]);\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n\n    const isPositiveNumber =\n      value.startsWith(\"-\") || (value.length > 0 && isNaN(parseInt(value)));\n    if (isPositiveNumber) {\n      return;\n    }\n\n    let newDate: Date;\n    switch (e.target.name) {\n      case \"year\":\n        setYearStr(value);\n        newDate = new Date(`${value}/${monthStr}/${dateStr}`);\n        break;\n      case \"month\":\n        setMonthStr(value);\n        newDate = new Date(`${yearStr}/${value}/${dateStr}`);\n        break;\n      case \"date\":\n        setDateStr(value);\n        newDate = new Date(`${yearStr}/${monthStr}/${value}`);\n        break;\n    }\n\n    const isValidDate = value !== \"\" && !isNaN(newDate!.getTime());\n    if (isValidDate) {\n      onDateChange(newDate!);\n    }\n  };\n\n  function makeToday() {\n    onDateChange(new Date());\n  }\n\n  return (\n    <Container>\n      <TextInput\n        type=\"text\"\n        name=\"year\"\n        onChange={handleInputChange}\n        value={yearStr}\n      />\n      <DateLabel>년</DateLabel>\n      <TextInput\n        type=\"text\"\n        name=\"month\"\n        width=\"1.5em\"\n        onChange={handleInputChange}\n        value={monthStr}\n      />\n      <DateLabel>월</DateLabel>\n      <TextInput\n        type=\"text\"\n        name=\"date\"\n        width=\"1.5em\"\n        onChange={handleInputChange}\n        value={dateStr}\n      />\n      <DateLabel>일</DateLabel>\n      <TodayButton onClick={makeToday}>Today</TodayButton>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nconst FooterBox = styled.div`\n  text-align: center;\n  padding-top: 0.7em;\n  padding-bottom: 0.5em;\n\n  color: #d6d6d6;\n`;\n\nexport function Footer() {\n  return <FooterBox>Copyright © Tekiter</FooterBox>;\n}\n","import styled from \"styled-components\";\n\nconst HeaderBox = styled.div`\n  padding: 0.3em 0;\n\n  text-align: center;\n\n  margin-bottom: 1.3em;\n\n  & h1 {\n    margin: 0;\n    font-weight: 500;\n  }\n`;\n\nexport function Header() {\n  return (\n    <HeaderBox>\n      <h1>D-day Calc.</h1>\n    </HeaderBox>\n  );\n}\n","export function addDays(date: Date, days: number) {\n  const newDate = new Date(date.getTime());\n  newDate.setDate(date.getDate() + days);\n\n  return newDate;\n}\n","interface DatePresenterProps {\n  date: Date;\n}\n\nexport function DatePresenter(props: DatePresenterProps) {\n  const { date: dateValue } = props;\n\n  const year = dateValue.getFullYear();\n  const month = dateValue.getMonth() + 1;\n  const date = dateValue.getDate();\n\n  return <div>{`${year}년 ${month}월 ${date}일`}</div>;\n}\n","import { ChangeEvent, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../styles/colors\";\n\ninterface NumberInputProps {\n  onValueChange?(value: number): void;\n  value?: number;\n  className?: string;\n  isLeft?: boolean;\n}\n\nexport const NumberInput = styled(function NumberInput(\n  props: NumberInputProps\n) {\n  const { value = 1, onValueChange = () => {}, className = \"\" } = props;\n\n  const [raw, setRaw] = useState(\"\");\n\n  useEffect(() => {\n    setRaw(value + \"\");\n  }, [value]);\n\n  function valueChanged(e: ChangeEvent<HTMLInputElement>) {\n    setRaw(e.target.value);\n\n    const num = parseInt(e.target.value);\n\n    if (!isNaN(num)) {\n      onValueChange(num);\n    }\n  }\n\n  return (\n    <input\n      type=\"text\"\n      className={className}\n      value={raw}\n      onChange={valueChanged}\n    />\n  );\n})`\n  width: 2.5em;\n  padding: 0 0.2em;\n  background-color: transparent;\n\n  border: none;\n  border-left: 1px solid $white;\n  border-top: 1px solid $white;\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n\n  color: inherit;\n\n  text-align: ${(props) => (props.isLeft ? \"left\" : \"right\")};\n\n  font-size: 1.5em;\n\n  transition: border-color 0.3s;\n\n  &:hover {\n    border-color: ${colors.primary};\n  }\n\n  &:focus-visible {\n    border-color: ${colors.primary};\n    outline: none;\n  }\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { addDays } from \"../util/datefn\";\nimport { DatePresenter } from \"./common/DatePresenter\";\nimport { NumberInput } from \"./common/NumberInput\";\n\ninterface DateFromXProps {\n  currentDate: Date;\n}\n\nexport function DateFromX(props: DateFromXProps) {\n  const { currentDate } = props;\n\n  const [days, setDays] = useState(1);\n\n  const addedDate = addDays(currentDate, days - 1);\n\n  return (\n    <Container>\n      <div>\n        <DLabel>D+</DLabel>\n        <NumberInput onValueChange={(v) => setDays(v)} value={days} isLeft />\n      </div>\n      <DatePresenter date={addedDate} />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DLabel = styled.span`\n  font-size: 1.4em;\n  width: 1.5em;\n  display: inline-block;\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { addDays } from \"../util/datefn\";\nimport { DatePresenter } from \"./common/DatePresenter\";\nimport { NumberInput } from \"./common/NumberInput\";\n\ninterface DateToXProps {\n  currentDate: Date;\n}\n\nexport function DateToX(props: DateToXProps) {\n  const { currentDate } = props;\n\n  const [days, setDays] = useState(1);\n\n  const addedDate = addDays(currentDate, -days);\n\n  return (\n    <Container>\n      <div>\n        <DLabel>D-</DLabel>\n        <NumberInput onValueChange={(v) => setDays(v)} value={days} isLeft />\n      </div>\n      <DatePresenter date={addedDate} />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DLabel = styled.span`\n  font-size: 1.4em;\n  width: 1.5em;\n  display: inline-block;\n`;\n","import styled from \"styled-components\";\nimport { DateFromX } from \"./DateFromX\";\nimport { DateToX } from \"./DateToX\";\n\ninterface ResultProps {\n  currentDate: Date;\n}\n\nexport function Result(props: ResultProps) {\n  const { currentDate } = props;\n\n  return (\n    <Container>\n      <DateFromX currentDate={currentDate}></DateFromX>\n      <DateToX currentDate={currentDate}></DateToX>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 18em;\n  margin: 0 auto;\n`;\n","import styled from \"styled-components\";\n\nexport function SubHeader() {\n  return (\n    <SubHeaderBox>\n      <span>기준으로</span>\n    </SubHeaderBox>\n  );\n}\n\nconst SubHeaderBox = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin-bottom: 0.5em;\n\n  & span {\n    padding-right: 0em;\n  }\n`;\n","import { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { DatePicker } from \"./components/DatePicker\";\nimport { Footer } from \"./components/Footer\";\nimport { Header } from \"./components/Header\";\nimport { Result } from \"./components/Result\";\nimport { SubHeader } from \"./components/SubHeader\";\n\nconst glass = css`\n  background: rgba(236, 228, 228, 0.2);\n  border-radius: 16px;\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border: 1px solid rgba(236, 228, 228, 0.3);\n`;\n\nconst Container = styled.div`\n  border: 1px solid gray;\n  width: 30rem;\n  margin: auto;\n  margin-top: 5rem;\n\n  ${glass}\n`;\n\nfunction App() {\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  return (\n    <Container>\n      <Header />\n      <DatePicker\n        date={currentDate}\n        onDateChange={(date) => setCurrentDate(date)}\n      />\n      <SubHeader />\n      <Result currentDate={currentDate} />\n      <Footer />\n    </Container>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle, keyframes } from \"styled-components\";\nimport colors from \"./colors\";\n\nconst backgroundAnimation = keyframes`\n  0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`;\n\nconst GlobalStyle = createGlobalStyle`\nhtml {\n  min-height: 100%;\n}\n  body {\n    margin: 0;\n    font-family: 'Noto Sans KR', -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif,\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  \n    box-sizing: border-box;\n\n    background: rgb(242,113,33);\n    background: linear-gradient(320deg,#f27121,#e94057,#8a2387,#23a6d5);\n    background-size: 400% 400%;\n\n    animation: ${backgroundAnimation} 30s ease infinite;\n\n\n    color: ${colors.foreground};\n    text-shadow: 2px 2px 4px rgba(0,0,0,0.2);\n    height: 100%;\n  }\n  \n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n\n\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport GlobalStyle from \"./styles/globalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}