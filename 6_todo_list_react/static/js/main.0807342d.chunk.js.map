{"version":3,"sources":["components/Footer.tsx","components/Header.tsx","components/Layout.tsx","components/Controls.tsx","components/TodoListControl.tsx","components/TodoList.tsx","components/MainArea.tsx","App.tsx","styles/globalStyle.ts","index.tsx"],"names":["Footer","FooterBox","styled","footer","Header","HeaderBox","header","MainContainer","div","Controls","props","items","onClick","ControlsBox","map","item","ControlButton","key","call","content","button","TodoListControl","onAdd","useState","input","setInput","TodoListControlBox","ContentInput","value","onChange","e","target","SubmitButton","TodoList","list","setList","TodoListBox","TodoListLabel","label","TodoListItemContainer","idx","TodoListItem","TodoListItemDelete","section","h2","ul","li","MainArea","viewMode","setViewMode","MainAreaBox","mode","Splitted","left","right","main","SplittedBox","hidden","css","App","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0807342d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport function Footer() {\n  return (\n    <FooterBox>\n      <h5>Tekiter</h5>\n    </FooterBox>\n  );\n}\n\nconst FooterBox = styled.footer`\n  color: white;\n  background-color: grey;\n  text-align: center;\n\n  padding: 0.3em 0;\n`;\n","import styled from \"styled-components\";\n\nexport function Header() {\n  return (\n    <HeaderBox>\n      <h1>Todo List</h1>\n    </HeaderBox>\n  );\n}\n\nconst HeaderBox = styled.header`\n  background-color: grey;\n  color: white;\n  text-align: center;\n\n  padding: 0.5em 0;\n`;\n","import styled from \"styled-components\";\n\nexport const MainContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from \"styled-components\";\n\ninterface ControlsProps {\n  items?: {\n    key: string;\n    content: string;\n  }[];\n  onClick?(key: string): void;\n}\n\nexport function Controls(props: ControlsProps) {\n  const { items = [], onClick } = props;\n\n  function handleControlClick(key: string) {\n    return function () {\n      onClick?.call(null, key);\n    };\n  }\n\n  return (\n    <ControlsBox>\n      {items.map((item) => (\n        <ControlButton key={item.key} onClick={handleControlClick(item.key)}>\n          {item.content}\n        </ControlButton>\n      ))}\n    </ControlsBox>\n  );\n}\n\nconst ControlsBox = styled.div`\n  width: fit-content;\n  margin: 0.5em auto;\n\n  & > *:not(:last-child) {\n    margin-right: 0.3em;\n  }\n`;\n\nconst ControlButton = styled.button`\n  padding: 0.3em 0.5em;\n  background-color: #03dac6;\n  color: black;\n  border: none;\n\n  &:hover {\n    background-color: #03dac6;\n  }\n\n  &:active {\n    background-color: #018786;\n  }\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\n\ninterface TodoListControlProps {\n  onAdd(content: string): void;\n}\n\nexport function TodoListControl(props: TodoListControlProps) {\n  const { onAdd } = props;\n\n  const [input, setInput] = useState(\"\");\n\n  function submitValue() {\n    onAdd(input);\n    setInput(\"\");\n  }\n\n  return (\n    <TodoListControlBox>\n      <ContentInput value={input} onChange={(e) => setInput(e.target.value)} />\n      <SubmitButton onClick={submitValue}>+</SubmitButton>\n    </TodoListControlBox>\n  );\n}\n\nconst TodoListControlBox = styled.div`\n  display: flex;\n`;\n\nconst ContentInput = styled.input`\n  display: block;\n  flex-grow: 1;\n\n  height: 2em;\n  padding: 0 0.5em;\n  border: 1px solid gray;\n  border-radius: 5px 0 0 5px;\n  border-right: none;\n  display: block;\n  flex-grow: 1;\n`;\n\nconst SubmitButton = styled.button`\n  width: 4em;\n  height: 2em;\n  background-color: #03dac6;\n  border: 1px solid gray;\n  border-radius: 0 5px 5px 0;\n\n  &:hover {\n    background-color: #70efde;\n  }\n\n  &:active {\n    background-color: #018786;\n  }\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { TodoListControl } from \"./TodoListControl\";\n\ninterface TodoListProps {\n  label: string;\n}\n\ninterface Todo {\n  content: string;\n}\n\nexport function TodoList(props: TodoListProps) {\n  const [list, setList] = useState<Todo[]>([]);\n\n  function addTodo(content: string) {\n    setList((list) => [...list, { content }]);\n  }\n\n  return (\n    <TodoListBox>\n      <TodoListLabel>{props.label}</TodoListLabel>\n      <TodoListItemContainer>\n        {list.map((item, idx) => (\n          <TodoListItem key={idx}>\n            {item.content}\n            <TodoListItemDelete>X</TodoListItemDelete>\n          </TodoListItem>\n        ))}\n      </TodoListItemContainer>\n      <TodoListControl onAdd={addTodo} />\n    </TodoListBox>\n  );\n}\n\nconst TodoListBox = styled.section`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  padding: 1em 2em;\n  border: 1px solid black;\n`;\n\nconst TodoListLabel = styled.h2`\n  font-size: 1.7em;\n  font-weight: 500;\n`;\n\nconst TodoListItemContainer = styled.ul`\n  width: 100%;\n  flex-grow: 1;\n\n  text-decoration: none;\n`;\n\nconst TodoListItem = styled.li`\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  padding: 1em 0.5em;\n\n  &:not(:last-child) {\n    border-bottom: 1px dashed lightgray;\n  }\n`;\n\nconst TodoListItemDelete = styled.button`\n  height: 2.5em;\n  width: 2.5em;\n  border: none;\n  background-color: transparent;\n  border-radius: 50%;\n  text-align: center;\n\n  &:hover {\n    background-color: rgb(236, 236, 236);\n  }\n\n  &:active {\n    background-color: lightgray;\n  }\n`;\n","import { ReactElement, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Controls } from \"./Controls\";\nimport { TodoList } from \"./TodoList\";\n\nexport function MainArea() {\n  const [viewMode, setViewMode] = useState(\"both\");\n\n  function onViewModeChange(key: string) {\n    setViewMode(key);\n  }\n\n  return (\n    <MainAreaBox>\n      <Controls\n        items={[\n          { content: \"오늘만 보기\", key: \"left\" },\n          { content: \"내일만 보기\", key: \"right\" },\n          { content: \"함께 보기\", key: \"both\" },\n        ]}\n        onClick={(mode) => onViewModeChange(mode)}\n      />\n      <Splitted\n        left={<TodoList label=\"오늘 할 일\" />}\n        right={<TodoList label=\"내일 할 일\" />}\n        mode={viewMode}\n      />\n    </MainAreaBox>\n  );\n}\n\nconst MainAreaBox = styled.main`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\ninterface SplittedProps {\n  left: ReactElement;\n  right: ReactElement;\n  mode: string;\n}\n\nfunction Splitted(props: SplittedProps) {\n  const { mode } = props;\n\n  return (\n    <SplittedBox left={mode === \"left\"} right={mode === \"right\"}>\n      {props.left}\n      {props.right}\n    </SplittedBox>\n  );\n}\n\nconst SplittedBox = styled.div<{ left: boolean; right: boolean }>`\n  display: flex;\n  flex-grow: 1;\n\n  & > * {\n    width: 100%;\n    transition: width 0.2s;\n  }\n\n  & > *:first-child {\n    ${(props) => (props.right ? hidden : \"\")}\n  }\n\n  & > *:last-child {\n    ${(props) => (props.left ? hidden : \"\")}\n  }\n`;\n\nconst hidden = css`\n  overflow: hidden;\n  width: 0;\n  padding-left: 0;\n  padding-right: 0;\n`;\n","import { Footer } from \"./components/Footer\";\nimport { Header } from \"./components/Header\";\nimport { MainContainer } from \"./components/Layout\";\nimport { MainArea } from \"./components/MainArea\";\n\nfunction App() {\n  return (\n    <MainContainer>\n      <Header />\n      <MainArea />\n      <Footer />\n    </MainContainer>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    * {\n        margin: 0;\n        box-sizing: border-box;\n    }\n    \n    html {\n        font-family: \"Noto Sans KR\", sans-serif;\n    }\n\n\n    body {\n        overflow-x: hidden;\n    }\n    \n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { GlobalStyle } from \"./styles/globalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}